             Basic commands
           ------------------
 1 create new project : ng new project_name
 2 To run : ng serve --open
 3 create new component : ng g c component_name
 4 create a service :ng g s service_name
                     eg: ng g s services/api  ('api' is a service inside 'services'
 folder)
------------------------------------------------------
               Basic Building BLocks
              -----------------------
  1 Module : used to add 3rd party modules/libraries
  2 Component : to create HTML pages(html,css,ts)
  3 Selector : used to replace the html corresponding to the component
  4 Services : reusable codes that can be shared b/w components
  5 Asynchronous function rxjs 
  6 Dependancy Injection - Data share b/w 2 dependant classes 
               
------------------------------------------------------------------------
           contact_app
          -------------
  1 ng new contact_app
  2 cd contact_app
  3 code .
  4 ng serve --open
  5 Install bootstrap,fontawesome & google fontawesome
    -> npm i bootstrap -(check in package.json)
       paste the following links in index.html,inside <head> -(optional)
       <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
       <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
    -> npm i @fortawesome/fontawesome-free
       paste the following links in index.html,inside <head> -(optional)
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  6 To configure bootstrap,fontawesome and google in angular.json:
     ---bootstrap---
     node modules->(after all @) bootstrap->dist>css->select bootstrap.min.css(right click & copy relative path)
      angular.json->"styles":->paste the copied relative path->(error : \ change to /)

     node modules->bootstrap->dist->js->bootstrap.bundle.js(right click & copy relative path)
     angular.json->"scripts":->paste the copied relative path->(error : \ change to /)

     ---fontawesome---
     node modules->@fortawesome\fontawesome-free->css->all.css(right click & copy relative path)
     angular.json->"styles":->paste the copied relative path->(error : \ change to /)
  7  create components
       ->contactManager - to view all contacts and manage
          ng g c contactManager
       ->addContact - to add new contacts
          ng g c addcontact
       ->updateContact - to update a contact
          ng g c updateContact
       ->viewContact - to view particular contact
          ng g c viewContact

->page_not_found create and design
->navigation bar create and design
In angular instead of href we user routerLink
->contactManager page design
->view page design
->update page design
->add page design

   8 API creation
      -create our own json file
      -goto jsonplaceholder site -> create my json server
   9 create folder for backend
       -create server folder inside the project(src-server folder-db.json)
       -create db.json file in server folder
       -add our own content to the db.json file
   10 In server folder, create package.json 
         -create package.json file-npm init
         -create json server- npm i json-server
         -npm start
           (error)
           update package.json file script as
              "scripts":
                {
                 "start": "json-server --watch db.json --port 3000"
                }
           -npm start
    11 create model for contact and group
           create model folder in src folder
           create myContact.ts file
           create myGroup.ts file
    12 To fetch data-Asynchronous resolving
          JS                             TS
          promise                        observable (method of rxjs lib)
          fetch('url')                    rxjs library                                       
           .then()------------------------.subscribe()   (method of observable)
    13 APIs creation
         eg: view contact
             update contact
    14 Service creation
        pass data from one component to another
        If component shares same data then we create a service

            ng g s services/api

     15 TO get http methods -get,post,put,patch & delete
        import HttpClientModule in app.module.ts

     16 Dependancy inject httpClient in API services 
          (used when 2 class are dependant)
     17 Data Binding
            Data sharing inside a component   
            Html(view) ->ts(component) or ts(component)->Html(view)
          (1) One-Way Data Binding
                a) component to view (ts->html)
                    i) String Interpolation -syntax :- {{variable_name}}
                   ii) Property Binding -syntax :- [attribute]="property_name"
     18 Directives - To manipulate DOM content
            (1) Component directives
            (2) Structural directives - to add or remove html elements based on some conditions
                 i) *ngIf="conditions"
                 ii) *ngFor="let var_name of array_name"
     19 Activated Route //class- viewContact - to pass id to the url
              Provides access to information about a route associated with a component that is loaded in an outlet. 
              Use to traverse the RouterState tree and extract information from nodes.
            
         -> params: Observable<Params> //params is a a method- Declared in Constructor
            An observable of the matrix parameters scoped to this route.
     
     